[project]
name = "template"
version = "0.1.0"
description = "Description"
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "Jongsu Liam Kim", email = "jongsukim8@gmail.com" }]
dependencies = ["mlflow", "hydra-core", "omegaconf"]
requires-python = ">=3.9, <4.0"
keywords = ["template", "python", "project", "template-project"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Software Development :: Libraries :: Python Modules"
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "pytest-html",
    "flake8",
    "flake8-docstrings",
    "black",
    "isort",
    "coverage",
    "coverage-badge",
    "pydocstyle",
    'pyupgrade',
    "bandit",
    "pre-commit",
    "pylint",
    "safety",
    "mypy",
    "mypy-extensions",
    "sphinx",
]

[build-system]
requires = ["setuptools >= 61.0", "wheel"]
build-backend = "setuptools.build_meta"

# [project.scripts]
# template-cli = "template.cli"
[tool.setuptools]
py-modules = []

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
color = true
extend-exclude = '''
/(
  # The following are specific to Black, you probably don't want those.
  \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | env
  | venv
  | tests/data
)/
'''

# pyproject.toml
[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs = [
    "hooks",
    "*.egg",
    ".eggs",
    "dist",
    "build",
    "docs",
    ".tox",
    ".git",
    "__pycache__"
]
python_files = "tests/*"
log_cli = "true"
markers = ["slow"]
doctest_optionflags = [
    "NUMBER",
    "NORMALIZE_WHITESPACE",
    "IGNORE_EXCEPTION_DETAIL"
]
addopts = [
    "--strict-markers",
    "--tb=short",
    "--doctest-modules",
    "--doctest-continue-on-failure",
]
filterwarnings = ["ignore::DeprecationWarning", "ignore::UserWarning"]

[tool.isort]
py_version = 39
line_length = 100
multi_line_output = 3
include_trailing_comma = true
indent = 4
color_output = true
known_typing = [
    "typing",
    "types",
    "typing_extensions",
    "mypy",
    "mypy_extensions"
]
sections = [
    "FUTURE",
    "TYPING",
    "STDLIB",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER"
]
skip_glob = ["*/__init__.py", "**/configs/**", "tests/config/**"]
known_third_party = [
    "numpy",
    "scipy",
    "pandas",
    "matplotlib",
    "sklearn",
    "tensorflow",
    "tqdm",
    "scipy"
]
profile = "black"
filter_files = true

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = 3.9
pretty = true
show_traceback = true
color_output = true
allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.coverage.run]
source = ["tests"]
branch = true

[tool.coverage.report]
fail_under = 50
show_missing = true

[tool.pydocstyle]
convention = "google"
match = '((?!_test).)*\.py'
